# 1. Dedicated Service Account for Prometheus (Recommended)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-sa # Changed from 'default' to a dedicated SA
  namespace: monitoring # Ensure this namespace exists
---
# 2. Updated ClusterRole
apiVersion: rbac.authorization.k8s.io/v1 # <-- Updated from v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""] # Core API group
  resources:
  # Resources needed for service discovery
  - nodes
  - services
  - endpoints
  - pods
  # Optional: nodes/proxy allows access to Kubelet API (/metrics/cadvisor etc.)
  # If you only scrape pods/services via annotations, you might not need nodes/proxy
  - nodes/proxy
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"] # <-- Updated API Group for Ingress
  resources:
  - ingresses # For discovering Ingress objects
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"] # For scraping kube-apiserver metrics endpoint
  verbs: ["get"]
---
# 3. Updated ClusterRoleBinding linking the Role to the dedicated SA
apiVersion: rbac.authorization.k8s.io/v1 # <-- Updated from v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus # Links to the ClusterRole defined above
subjects:
- kind: ServiceAccount
  name: prometheus-sa # <-- Changed from 'default' to the dedicated SA
  namespace: monitoring # Specifies the namespace of the ServiceAccount
